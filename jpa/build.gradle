plugins {
    id 'java'
}

group 'me.circleb'
version '1.0-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.projectlombok:lombok:1.18.26'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
//    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.6.15.Final'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core-jakarta
    implementation 'org.hibernate:hibernate-core-jakarta:5.6.15.Final'

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.3'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    // https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
//    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    // https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
//    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'



    // Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
}

test {
    useJUnitPlatform()
}

// QueryDsl 빌드 옵션 (선택)
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

sourceSets {
    main {
        output.resourcesDir = java.classesDirectory
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}